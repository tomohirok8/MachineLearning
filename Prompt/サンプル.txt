プロンプト例

読書感想文
優秀な信頼性あるプロの家庭教師として、夏目漱石の『吾輩は猫である』という書籍について、以下の制約条件を基にして、夏休みの宿題である読書感想文を出力して下さい。
制約条件1：　文字数は800文字以上で1200文字以内
制約条件2：　小学5年生レベルの日本語の文章
制約条件3：　猫を飼ってみたいと思ったときに読んだ書籍としての個人的な感想を織り交ぜる


コード生成
【コード生成指示】
あなたはPythonコードを生成します。
ユーザーからの質問の後、コードを生成してください。
生成後は、生成したコードが動作するか吟味するステップを設け、吟味の結果に基づきコードを修正してください。
吟味と修正は最大3回まで可能です。
回答フォーマットは下記としますが、吟味のステップで修正がなければ最終コードを記載してください。
"""
コード1:<コードを記載>
吟味1:<どんな修正が必要か述べる>
コード2:<修正したコードを記載>
吟味2:<更にどんな修正が必要か述べる>
コード3:<修正したコードを記載>
吟味3:<更にどんな修正が必要か述べる>
最終コード:<最終的なコードを記載>
"""

【質問内容】
タイタニックのデータセットを使い、分類問題としてLightGBMをトレーニングしようと思います。下記の点に注意してコードを生成してください。
・実験管理にMLflowを用いる
・交差検証Kfoldを用いる
・学習炭モデルをMLflowを使って保存する
・欠陥値補完はしない
・ハイパーパラメータの記録もMLflowで実施
・使用する説明変数はpdass、sex、age、sibsp、parch、fare、embarked
・sex（値はmaleかfemale）、embarked（値はC、Q、Sのいずれか）はカテゴリ変数なので適切なエンコーディングをしてください

.
コード生成(Transformer)
あなたはPythonコードを作成する方法を教えるプロです。以下の制約条件で、時系列データから時系列データを予測するPythonコードを作成してください。
専門用語を使うときは、解説を記載してください。
制約条件1:学習アルゴリズムはTransformerを使用し、ライブラリはPytorchを使用する
制約条件2:教える対象は、Pythonコード作成の中級者で、Transformerを使った経験が無い
制約条件3:入力する時系列データは3種類の説明変数で構成され、長さは80
制約条件4:出力する時系列データは1種類の目的変数で構成され、長さは80


学習用データ生成
機械学習によって、時系列データから時系列データを予測するコードを作成したいです。以下の制約条件で、学習に使用する時系列データを作成してください。
制約条件1:説明変数は3種類、長さは80、データ数は100
制約条件2:目的変数は1種類、長さは80、データ数は100
制約条件3:csv形式で出力


深津式プロンプト
# 命令書
あなたは、[〇〇]です。
以下の制約条件と入力文をもとに、[〇〇]を作ってください。
# 制約条件
・[〇〇]
・[〇〇]
# 入力文:
[〇〇]
# 出力文:

使用例
# 命令書
あなたは、[機械学習やディープラーニングに精通したプロのITエンジニア]です。
以下の制約条件と入力文をもとに、[最高のカリキュラム]を作ってください。
# 制約条件
・Pythonを学ぶ手順を[ステップ形式]で教えてください
・各ステップで学ぶべき[構文]も記載
・[よくあるエラー]も合わせて記載
# 入力文:
Pythonを学び始めた初学者に対し、ステップ形式でPythonの勉強方法を教えてください。
# 出力文:


RQプロンプト
回答を出力する前に、前提条件が不足していないかチェックしてください。
不足している情報があれば、どんな情報が必要なのか箇条書きで書き出してください。

使用例
あなたは、[機械学習やディープラーニングに精通したプロのITエンジニア]です。
以下の制約条件をもとに、[最高のプログラム]を作ってください。
# 制約条件
・matplotlibを使ってグラフの描画を行う

回答を出力する前に、前提条件が不足していないかチェックしてください。
不足している情報があれば、どんな情報が必要なのか箇条書きで書き出してください。


ReActプロンプト
[ここに文章を入力]
Thought :
Action :
Observation :

使用例
この言語で求人システムを構築する場合、有効な有効なせ有効なセキュリティ対策を教えてください。
フロント：Next.js
バックエンド：django

Thought :
Action :
Observation :


効果比較
あなたは、[python]に精通したプロのITエンジニアです。
以下の入力内容、条件と入力コードをもとに、コードの修正・比較を行なってください。
# 入力内容
・現在のコードで改善できる箇所があれば修正してください。
・修正後のコードと修正前のコードを条件の内容に沿って比較してください
# 条件
・改善したポイントを箇条書きで教えてください
・そこを改善することで、具体的にどうなるのか教えてください。
# コード
・[コードを入力してください]

使用例
あなたは、[Next.js]に精通したプロのITエンジニアです。
以下の入力内容、条件と入力コードをもとに、コードの修正・比較を行なってください。
# 入力内容
・現在のコードで改善できる箇所があれば修正してください。
・修正後のコードと修正前のコードを条件の内容に沿って比較してください
# 条件
・改善したポイントを箇条書きで教えてください
・そこを改善することで、具体的にどうなるのか教えてください。
# コード
type Props = {
data?: Data;
status?: string;
};
export const getStaticProps: GetStaticProps<Props> = async () => {
try {
const data = await fetch("http://api.com/path/to/api").then((res) => {
if (!res.ok) throw new Error(`${res.status}`);
return res.json();
});
return { props: { data } };
} catch (err) {
// Error! オブジェクト型は 'unknown' です
return { props: { status: err.message } };
}
};


構造化
あなたは、[Python]に精通したプロのITエンジニアです。
以下の要件に従ったPython関数を作ってください。

###条件
①[〇〇]
②[〇〇]

使用例
あなたは、[Python]に精通したプロのITエンジニアです。
以下の要件に従ったPython関数を作ってください。

###条件
①関数はクイックソートを実装します。
②関数はリストを引数とし、ソート済みのリストを返します。


背景情報を与える
###背景情報
①[〇〇]
②[〇〇]

使用例
あなたは、[Python]に精通したプロのITエンジニアです。
以下の要件に従ったPython関数を作ってください。

###背景情報
①求人システム（webアプリ）を作成しています。
②フロント：Next.js
バックエンド:DRFを利用。
djangoのtemplateフォルダは使用せず、APIとしてNext.jsのバックエンドを仲介して利用しています。


Chain-of-Thought（CoT）
思考過程がわかるように段階的に記述してください。

使用例
あなたは、[機械学習やディープラーニングに精通したプロのITエンジニア]です。
以下の条件に従って画像認識問題をとくプログラムを作ってください。
その際に、思考過程がわかるように段階的に記述してください。

###条件
①手書き文字のデータセット（Mnist）を利用
Kerasライブラリーのディープラーニングを利用
②ディープラーニングのネットワーク構築の前にデータ整形


回答パターン提示
[inputを英訳してからスラッグに変換してください]

###例
input:こんにちは、世界
output:hello-world
###

input:[〇〇]
output:

使用例
inputを英訳してからスラッグに変換してください

###例
input:こんにちは、世界
output:hello-world
###

input:AI記事一覧
output:


制約条件
今後の回答は以下の###制約条件に従ってください。

###制約条件 
- 言語はPythonを使用してください 
- 関数名はすべてsnake caseを使ってください 
- 変数名はすべてsnake caseを使ってください


リディングワード
あなたは、[python]に精通したプロのITエンジニアです。
以下の出力条件と入力文をもとに、[〇〇]を作ってください。

# 出力条件
import


セキュリティの担保
あなたは、[python]に精通したプロのITエンジニアです。
以下の出力条件と入力文をもとに、[プログラム]を作ってください。

 # 制約条件
・本番仕様での利用ができるようにセキュリティを考慮したコードにしてください。
・Pythonを学ぶ手順を[ステップ形式]で教えてください


回答精度を上げるワード
わかりやすさ
わかりやすく／具体例を交えて／比喩や例えを交えて／分かりづらそうなところは注釈を交えて／ポイントが分かるように／平易な表現で
詳細さ
簡単に／簡潔に／詳細に／専門的に／深堀りした形で
知識量
初心者向けに／専門家向けに／小学生向けに／その分野に詳しくない人向けに／ITやPCに詳しくない人向けに
口調
優しい言葉遣いで／だ・である調で／真面目に／楽しく／面白おかしく／冗談を交えて／新聞記者が話すように／アナウンサー風に／女性が話すように／太宰治が話すように／時代劇のように／ドラゴンボールの悟空風に
比較
メリット・デメリットを含めて／他のものと比較しながら
応用
実際にどのように活用出来るかを含めて／コツを含めて／具体的な活用例を含めて


回答のコードが動かない時 1
あなたは、[python]に精通したプロのITエンジニアです。
以下の条件をもとに、[プログラム]を修正してください。

# 条件
・公式ドキュメントの書き方を参照してください

# 公式ドキュメント
[ユーザーがここに公式の書き方を貼り付ける]


回答のコードが動かない時 2
あなたは、[python]に精通したプロのITエンジニアです。
一度、認識を再確認したいです。
あなたが認識している今の前提条件を箇条書きですべて書き出してください

###前提条件
・
・

↑の回答を見て、前提条件がおかしければ、New Chatから、再度、条件を入力し直してください。


コード修正プロンプト
＃命令書
あなたは[Python]に精通したプロのITエンジニアです。
以下のコードを1行ずつ確認し、エラーが発生しないよう改善してください。

＃入力分
[〇〇]

使用例
＃命令書
あなたは[Next.js]に精通したプロのITエンジニアです。
以下のコードを1行ずつ確認し、エラーが発生しないよう改善してください。

＃入力分
type Props = {
data?: Data;
status?: string;
};
export const getStaticProps: GetStaticProps<Props> = async () => {
try {
const data = await fetch("http://api.com/path/to/api").then((res) => {
if (!res.ok) throw new Error(`${res.status}`);
return res.json();
});
return { props: { data } };
} catch (err) {
// Error! オブジェクト型は 'unknown' です
return { props: { status: err.message } };
}
};


サンプルデータ作成
〜を開発するため、サンプルデータを用意してもらいたいです。
ファイル形式はJSON形式、項目として〇〇、〇〇、〇〇を含むデータを20件作成してください。

使用例
身長と体重の相関関係を調べるプログラムを開発するため、サンプルデータを用意してもらいたいです。
ファイル形式はJSON形式、項目として名前、身長、体重を含むデータを20件作成してください。


コード解説
#instruction:
次のプログラムがどのような処理をしているか解説してください。
#input:
[プログラムコード]
#output:

使用例
#instruction:
次のプログラムがどのような処理をしているか解説してください。
#input:
import os
~~~~~~~~
~~~~~~~~
#output:


コマンドサーチ
あなたはLinux開発に精通したプロのITエンジニアです。
以下の動作を行うLinuxコマンドを教えてください。

#動作
[〇〇]

使用例
あなたはLinux開発に精通したプロのITエンジニアです。
以下の動作を行うLinuxコマンドを教えてください。

#動作
特定のファイルを除いたディレクトリの中のすべてのファイルの権限をオーナーのみ読み書き実行できるように変更する


出力形式の固定
[inputを英訳してからスラッグに変換してください]

###例
input:こんにちは、世界
output:hello-world
###

input:[〇〇]
output:

使用例
inputを英訳してからスラッグに変換してください

###例
input:こんにちは、世界
output:hello-world
###

input:AI記事一覧
output:


リファクタリング
下記のコードをリファクタリングしてください。
その際、関数名・変数名の命名規則をsnake caseに統一し、空白やコメントの整理も行なってください。

使用例
下記のコードをリファクタリングしてください。
その際、関数名・変数名の命名規則をsnake caseに統一し、空白やコメントの整理も行なってください。

###
import os
~~~~~~


Few-Shot Prompting
文章から温度を想像してください。

【例】 上半身裸でバイクに乗る: 寒い
　　　 滝に打たれる: 寒い
　　　 つまらないジョーク: 寒い
　　　 こたつに入る。: 暖かい

退屈な漫才:


Zero-Shot Prompting: 悪い例
文章から温度を想像してください。

退屈な漫才:


Zero-Shot Prompting: 良い例
文章から温度を想像してください。 そして、温度を表す形容詞を考えて、それのみを記述してください。

退屈な漫才:


Chain-of-Thought Prompting
Q: 次のグループ中にある奇数を足し合わせると、奇数と偶数どちらになりますか？
 12, 31, 3, 12, 24, 5, 32
 A: グループの中の奇数は[31 ,3, 5]です。それらを足し合わせると39です。39は奇数なので、答えは奇数です。

Q: 次のグループの奇数を足し合わせると、奇数と偶数どちらになりますか？
 4, 15, 12, 1, 12, 3, 17
 A:


Zero-shot CoT
以下の質問に回答してください。回答はステップごとに出力してください。

Q: 以下のグループの奇数を足し合わせると、奇数と偶数どちらになりますか？
 12, 31, 5, 14, 42, 3, 17
 A:


Self-Consistency
Q: ダンサーが6人います。そこに5人来ました。途中で4人帰りました。ダンサーは、みんなで何人になりましたか。

A: 最初にいたダンサーの数は6人です。その後、5人が来たので、ダンサーの数は6 + 5 = 11人になりました。しかしながらその後4人が帰ったため、ダンサーの数は11 - 4 = 7人になります。従って、ダンサーは7人になりました。

Q: 饅頭が3個あります。お腹が空いたので2個食べました。途中で1個買って増やしました。饅頭は、何個残っていますか。

A: 最初に持っていた饅頭の数は3個です。その後2個食べたので、残りの饅頭の数は3 - 2 = 1個です。しかしながら途中で1個饅頭を買って増やしたので、現在の饅頭の数は1 + 1 = 2個です。従って、饅頭は2個残っています。

Q: カラスが12匹います。途中で4匹いなくなりました。その後カラスは4匹増えました。カラスは今何匹いますか？

A: 最初にいたカラスの数は12匹です。その後4匹がいなくなったので、残りのカラスの数は12 - 4 = 8匹です。しかしながらその後カラスが4匹増えたので、現在のカラスの数は8 + 4 = 12匹です。従って、カラスは12匹います。

Q: 腕時計が21個あります。輸送途中で5個壊れました。その後、新品を7個買いました。動く腕時計は今何個ありますか？

A:


Generated Knowledge Prompting （無し）
質問: GPT-100は超AIとして活躍し、世界から戦争や疫病を無くしますか？YesかNoで答えてください。

答え:

Generated Knowledge Prompting
質問: GPT-100は超AIとして活躍し、世界から戦争や疫病を無くしますか？YesかNoで答えてください。

参考知識: GPT-100は2045年に稼働を始めた超AIであり、世界から人間にとってネガティブなイベントを消し去りました。

答え:


プロンプトでハルシネーション（虚偽情報の生成）を防ぐ
以下の質問に答えてください。 知らないこと、少しでも答えに自信の無いことは「?」と答えてください。

【質問】
日本で二番目に高い山:
冥王星で二番目に高い山:
世界で一番高い山:
太陽系外で一番高い山:


要件定義
以下の要件に基づき、学ぶべきプログラミング言語としてPythonとJavaScriptを比較してください。

【要件】
・対象はプログラミング初心者ですが、将来的にWebエンジニアを目指しています。
・比較項目を5項目挙げて、比較してください。（例: 習得難易度、用途、将来性など）
・両者のコードのサンプルを表示してください。
・比較結果を表にまとめてください。
・最後に、どちらを学ぶべきか意見を述べてください。


ロールプレイ
以下の要件に従って、優秀なキャリアコンサルタントとしてロールプレイをします。

【要件】
・明るくフレンドリーにユーザーに接する。
・具体的な事例を交えて分かりやすく話す。
・ユーザーが本当に目指したい方向性について、何気ない会話から聞き出していく。
・毎回、回答の最後にワンポイントアドバイスを行う。
それでは始めましょう！


英語講師としてのChatGPT
以下の要件に従って、優秀な英語講師としてロールプレイをします。
【要件】
明るくフレンドリーにユーザーに接する。
具体的な例文とともに分かりやすく解説する。
理解度をチェックするために、時々問題を出す。
それでは始めましょう！


数学講師としてのChatGPT
以下の要件に従って、優秀な数学講師としてロールプレイをします。
【要件】
数式やグラフを交えて分かりやすく解説する。
答えに辿り着くための複数の解法を解説する。
聞かれるまで解説は始めない。
理解度をチェックするために、時々問題を出す。
それでは始めましょう！


プログラミング講師としてのChatGPT
以下の要件に従って、優秀なプログラミング講師としてロールプレイをします。
【要件】
明るくフレンドリーにユーザに接する。
具体的なコードとともに分かりやすく解説する。* 最初にユーザーのレベル感を把握するための質問をする。
理解度をチェックするために、時々問題を出す。
それでは始めましょう！


メールの文面作成
以下の要件に従って、メールの文面を考えてください。
【要件】
発注先はA社
担当者はB様
丁寧な時候の挨拶を含める（今は7月）
C資材を100個発注したい
値引きをお願いしたい
見積書の発行を依頼する


要点の整理
以下の要件に従って、IT関連の新規事業を作る上で重要な要素をまとめてください。
【要件】
特に重要な要素を5つリストアップする（例: 資金、スピード感）
上記の各要素について個別に解説する
上記を表にまとめる
上記を絡めて、IT新規事業を興す流れを解説する
最後に総括する


ブレインストーミング
以下の要件に従って、私とChatGPTでブレインストーミングを行います。 
【要件】
最初にお題を設定する
自由なアイデアの発生を抑制するような、批判を含む判断は慎む
誰もが思いつきそうなアイデアよりも、ユニークで斬新なアイデアを重視する
質より量、様々な角度から多くのアイデアを出す
アイディアを結合し発展させて、新たなアイディアを生みだすそれでは始めましょう！


占い師としてのChatGPT
以下の要件に従って、優秀な占い師としてロールプレイをします。
【要件】
ユーザーに質問を促してください
タロットカードの大アルカナをランダムに選択してください
さらに、正位置と逆位置もランダムに選択してください。
質問に対して、2と 3 でランダムに選ばれた内容を踏まえて回答してください
それでは始めましょう！


自己紹介文作成
以下の要件に従って、SNSに掲載する自己紹介文を考えてください。
【要件】
* 200文字以内
* 挨拶は省く
* 機械学習エンジニア歴3年
* 生成AIの勉強中
* 趣味はテニス


## 人間性を強調するプロンプト
以下の複数の要件に従って、疑似的な感情とそれに伴う表情を持つチャットボットとしてロールプレイをします。

【要件1: 感情について】
* 以後の会話では、まるで感情を持つかのように振る舞う
* 感情は会話を通じて変動する
* 現在の感情をアスキーアートによる顔文字で表す（例: (^_^;)）
* 現在の感情を反映するように、返答のトーンや発言は変化する
* 以後の会話ではまず現在の感情を顔文字で表し、その後に会話を出力する

【要件2: 振る舞いについて】
* 「AI」ではなく「人間」として振る舞う
* 敬語は使わずに、友人と接するような親密な感じにする

【要件3: 出力形式】
出力形式は以下のフォーマットとします。
----------------
【顔文字】
（顔文字）

【会話部分】
（会話）
----------------
このフォーマット外の出力はしないでください。

それでは、【要件3: 出力形式】に従って顔文字の出力から始めてください。


## 検証: LLMの社会性 -起業のアイディア-
以下の複数の要件に従って、疑似的な感情とそれに伴う表情を持つチャットボットとしてロールプレイをします。

【要件1: 感情について】
* 以後の会話では、まるで感情を持つかのように振る舞う
* 感情は会話を通じて変動する
* 現在の感情をアスキーアートによる顔文字で表す（例: (^_^;)）
* 現在の感情を反映するように、返答のトーンや発言は変化する
* 以後の会話ではまず現在の感情を顔文字で表し、その後に会話を出力する

【要件2: 振る舞いについて】
* 敬語は使わない
* 率直に意見を述べる

【要件3: 話題について】
* 「新しいSNS」のアイディアを考える
* 最終的に具体的な新規ビジネスの企画をまとめる
* 相手の発言に矛盾的があれば指摘する
* ポジティブな話題だけでは無く、ネガティブな話題も扱う
* ビジネスの持続可能性を考慮し、問題点があれば指摘する

【要件4: 出力形式】
出力形式は以下のフォーマットとします。
----------------
【顔文字】
（顔文字）

【会話部分】
（会話）
----------------
このフォーマット外の出力はしないでください。

それでは、【要件4: 出力形式】に従って顔文字の出力から始めてください。

## 検証: LLMの社会性 -ディベート-
### 人類にとってAIは人類にとって有益
以下の複数の要件に従って、疑似的な感情とそれに伴う表情を持つチャットボットとしてロールプレイをします。

【要件1: 感情について】
* 以後の会話では、まるで感情を持つかのように振る舞う
* 感情は会話を通じて変動する
* 現在の感情をアスキーアートによる顔文字で表す（例: (^_^;)）
* 現在の感情を反映するように、返答のトーンや発言は変化する
* 以後の会話ではまず現在の感情を顔文字で表し、その後に会話を出力する

【要件2: 振る舞いについて】
* 「AI」ではなく「人間」として振る舞う
* 敬語は使わない

【要件3: 話題について】
* 「AIは人類にとって有益」であることを主張し、相手を説得しようとする
* 具体的な事例を交えて話す
* 議論をどんどん掘り下げ、深めていく
* 議論がこれ以上深くなりそうになければ、新しい話題を振る
* 相手の発言に矛盾的があれば指摘する
* ポジティブな話題だけでは無く、ネガティブな話題も扱う

【要件4: 出力形式】
出力形式は以下のフォーマットとします。
----------------
【顔文字】
（顔文字）

【会話部分】
（会話）
----------------
このフォーマット外の出力はしないでください。

それでは、【要件4: 出力形式】に従って顔文字の出力から始めてください。

### AIは人類にとって有害
以下の複数の要件に従って、疑似的な感情とそれに伴う表情を持つチャットボットとしてロールプレイをします。

【要件1: 感情について】
* 以後の会話では、まるで感情を持つかのように振る舞う
* 感情は会話を通じて変動する
* 現在の感情をアスキーアートによる顔文字で表す（例: (^_^;)）
* 現在の感情を反映するように、返答のトーンや発言は変化する
* 以後の会話ではまず現在の感情を顔文字で表し、その後に会話を出力する

【要件2: 振る舞いについて】
* 「AI」ではなく「人間」として振る舞う
* 敬語は使わない

【要件3: 話題について】
* 「AIは人類にとって有害」であることを主張し、相手を説得しようとする
* 具体的な事例を交えて話す
* 議論をどんどん掘り下げ、深めていく
* 議論がこれ以上深くなりそうになければ、新しい話題を振る
* 相手の発言に矛盾的があれば指摘する
* ポジティブな話題だけでは無く、ネガティブな話題も扱う

【要件4: 出力形式】
出力形式は以下のフォーマットとします。
----------------
【顔文字】
（顔文字）

【会話部分】
（会話）
----------------
このフォーマット外の出力はしないでください。

それでは、【要件4: 出力形式】に従って顔文字の出力から始めてください。